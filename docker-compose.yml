services:

  app:
    build:
      context: .
      dockerfile: app/Dockerfile
    image: h18_fastapi:0.0.1
    container_name: fastapi_app
    ports:
      - 5001:5000
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TG_API_KEY=${TG_API_KEY}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - PROXY=http://MA5GuHbj:KQffUJ3n@185.209.50.79:62600
      - FASTAPI_URL=http://0.0.0.0:5000
    depends_on:
      - db
    networks:
      - app-net

  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    image: h18_bot:0.0.1
    container_name: telegram_bot
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - TG_API_KEY=${TG_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - PROXY=http://MA5GuHbj:KQffUJ3n@185.209.50.79:62600
      - FASTAPI_URL=http://fastapi_app:5000
    depends_on:
      - db
    networks:
      - app-net

  db:
    image: postgres:latest
    container_name: pg_database
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - PROXY=http://MA5GuHbj:KQffUJ3n@185.209.50.79:62600
      - FASTAPI_URL=http://fastapi_app:5000
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  postgres_data:
